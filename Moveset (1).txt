-- moveset changer
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local loopActive = true
local toolChanged = false
local function updateUI()
    local playerGui = player:FindFirstChild("PlayerGui")
    if not playerGui then return end
    -- Update Hotbar Names
    local hotbar = playerGui:FindFirstChild("Hotbar")
    if hotbar then
        local backpack = hotbar:FindFirstChild("Backpack")
        if backpack then
            local hotbarFrame = backpack:FindFirstChild("Hotbar")
            if hotbarFrame then
                for i, name in ipairs({
                    "explosive kick down",
                    "Lethal strikes",
                    "Destructive smash",
                    "Reversed overhead"
                }) do
                    local baseButton = hotbarFrame:FindFirstChild(tostring(i)) and hotbarFrame[tostring(i)]:FindFirstChild("Base")
                    if baseButton and baseButton:FindFirstChild("ToolName") then
                        baseButton.ToolName.Text = name
                    end
                end
            end
        end
    end
    -- Update MagicHealth Text
    local barGui = playerGui:FindFirstChild("Bar")
    if barGui then
        local magicHealth = barGui:FindFirstChild("MagicHealth")
        if magicHealth then
            local textLabel = magicHealth:FindFirstChild("TextLabel")
            if textLabel then
                textLabel.Text = "Ultimate scripter"
            end
        end
    end
end
local function startDetectionLoop()
    if not loopActive then return end
    task.spawn(function()
        while loopActive do
            local character = player.Character
            if not character or not character:FindFirstChild("Humanoid") then
                loopActive = false
                break
            end
            if character.Humanoid.Health <= 0 then
                loopActive = false
                break
            end
            local tool = player.Backpack:FindFirstChild("Normal Punch") or (character and character:FindFirstChild("Normal Punch"))
            if tool and not toolChanged then
                updateUI()
                toolChanged = true
                -- Detect when tool gets removed to reset toolChanged
                local function resetOnRemove()
                    if not loopActive then return end
                    tool.AncestryChanged:Connect(function(_, parent)
                        if not parent then
                            toolChanged = false
                            startDetectionLoop()
                        end
                    end)
                end
                resetOnRemove()
                break -- Stop current loop, wait for tool removal to re-trigger
            end
            task.wait(0.1)
        end
    end)
end
startDetectionLoop()
player.CharacterAdded:Connect(function(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        loopActive = false
    end)
end)
-- m1 animation
-- m2
------------[[ function ]]--------------
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animationReplacements = {
    ["rbxassetid://10469493270"] = { Replacement = "rbxassetid://0", Custom = "rbxassetid://15090141089", StartTime = 1.6 },
    ["rbxassetid://10469630950"] = { Replacement = "rbxassetid://0", Custom = "rbxassetid://85025226664507", StartTime = 1.4 },
    ["rbxassetid://10469639222"] = { Replacement = "rbxassetid://0", Custom = "rbxassetid://16310343179", StartTime = 0 },
    ["rbxassetid://10469643643"] = { Replacement = "rbxassetid://0", Custom = "rbxassetid://17838006839", StartTime = 0.5 }
}
local function playCustomAnimation(animationId, startTime, speed, fadeTime, stopDelay)
    local animation = Instance.new("Animation")
    animation.AnimationId = animationId
    local animationTrack = humanoid:LoadAnimation(animation)
    animationTrack:Play(fadeTime)
    animationTrack.TimePosition = startTime
    animationTrack:AdjustSpeed(speed)
    task.delay(stopDelay, function()
        animationTrack:Stop(fadeTime)
    end)
end
humanoid.AnimationPlayed:Connect(function(animationTrack)
    local data = animationReplacements[animationTrack.Animation.AnimationId]
    if data then
        animationTrack:Stop()
        local replacementAnimation = Instance.new("Animation")
        replacementAnimation.AnimationId = data.Replacement
        local replacementTrack = humanoid:LoadAnimation(replacementAnimation)
        replacementTrack:Play()
        replacementTrack:AdjustSpeed(0)
        replacementTrack.TimePosition = 0.6
        replacementTrack:Stop(0)
        playCustomAnimation(data.Custom, data.StartTime, 1, 0.2, 0.5)
    end
end)
-- move 5
--------------[[ move 5 knock back ]]--------------
--
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local tool = Instance.new("Tool")
tool.Name = "Swift Knock Back"
tool.RequiresHandle = false
tool.Parent = backpack
local cooldown = false
tool.Activated:Connect(function()
	if cooldown then return end
	cooldown = true
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local hrp = character:WaitForChild("HumanoidRootPart")
	local CommunicateRemote = character:WaitForChild("Communicate")
	local freezeAnimation = Instance.new("Animation")
	freezeAnimation.AnimationId = "rbxassetid://0"
	local freezeTrack = humanoid:LoadAnimation(freezeAnimation)
	freezeTrack:Play(1, 5, 1)
	freezeTrack:AdjustSpeed(0.01)
	local cfr = hrp.CFrame
	local angleX = math.rad(-50) * 0.65
	local angleY = math.rad(50) * 0
	local angleZ = math.rad(50) * 0
	task.spawn(function()
		local start = tick()
		while tick() - start < 0.8 do
			task.wait()
			hrp.CFrame = cfr * CFrame.Angles(angleX, angleY, angleZ) * CFrame.new(0, -0.6, -0.4)
			hrp.Velocity = Vector3.zero
			hrp.RotVelocity = Vector3.zero
		end
		freezeTrack:Stop()
	end)
	local args = {
		{
			Dash = Enum.KeyCode.W,
			Key = Enum.KeyCode.Q,
			Goal = "KeyPress"
		}
	}
	CommunicateRemote:FireServer(unpack(args))
	wait(0.3)
	local knockAnimation = Instance.new("Animation")
	knockAnimation.AnimationId = "rbxassetid://85025226664507"
	local knockTrack = humanoid:LoadAnimation(knockAnimation)
	local fadeTime = 0.5
	knockTrack:Play(fadeTime)
	knockTrack.TimePosition = 1
	knockTrack:AdjustSpeed(0.8)
	task.delay(1, function()
		knockTrack:Stop(fadeTime)
	end)
Wait(0.8)
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local forwardVector = humanoidRootPart.CFrame.LookVector
humanoidRootPart.CFrame = humanoidRootPart.CFrame + (forwardVector * 10)
	task.delay(6, function()
		cooldown = false
	end)
end)

-- moveset 1 animation replacement
-------------[[ lethal strike ]]-------------------
local animationId = 10468665991
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)    
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local imageId = "rbxassetid://98871503201054"
local fadeTime = 0.5
local displayTime = 2
local tweenOffset = Vector3.new(3, 1, 0)
local hasShownBillboard = {}
local baseTextPos = UDim2.new(0.30, 0, 0.24, 0)
local function setTextPosition(mods)
	local x = baseTextPos.X.Scale
	local y = baseTextPos.Y.Scale
	if mods.right then x += mods.right end
	if mods.left then x -= mods.left end
	if mods.down then y += mods.down end
	if mods.up then y -= mods.up end
	return UDim2.new(x, 0, y, 0)
end
local function createImageDisplay(player)
	if hasShownBillboard[player.UserId] then return end
	hasShownBillboard[player.UserId] = true
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Size = Vector3.new(4, 4, 0.1)
	part.CFrame = hrp.CFrame * CFrame.new(tweenOffset)
	part.Transparency = 1
	part.Parent = workspace
	local surfaceGui = Instance.new("SurfaceGui")
	surfaceGui.Face = Enum.NormalId.Front
	surfaceGui.AlwaysOnTop = true
	surfaceGui.Adornee = part
	surfaceGui.LightInfluence = 0
	surfaceGui.ResetOnSpawn = false
	surfaceGui.Parent = part
	local imageLabel = Instance.new("ImageLabel")
	imageLabel.Size = UDim2.new(1, 0, 1, 0)
	imageLabel.Position = UDim2.new(0, 0, 0, 0)
	imageLabel.BackgroundTransparency = 1
	imageLabel.Image = imageId
	imageLabel.ImageTransparency = 1
	imageLabel.Parent = surfaceGui
	local textLabel = Instance.new("TextLabel")
	textLabel.Size = UDim2.new(0.42, 0, 0.42, 0)
	textLabel.Position = setTextPosition({ right = 0.05 })
	textLabel.BackgroundTransparency = 1
	textLabel.TextScaled = true
	textLabel.Font = Enum.Font.SpecialElite
	textLabel.TextColor3 = Color3.new(0, 0, 0)
	textLabel.TextStrokeTransparency = 1
	textLabel.Text = "Ore wa SUTORAIKÄ€ DA"
	textLabel.TextTransparency = 1
	textLabel.Parent = imageLabel
	TweenService:Create(imageLabel, TweenInfo.new(fadeTime), { ImageTransparency = 0 }):Play()
	TweenService:Create(textLabel, TweenInfo.new(fadeTime), { TextTransparency = 0 }):Play()
	task.delay(displayTime, function()
		TweenService:Create(imageLabel, TweenInfo.new(fadeTime), { ImageTransparency = 1 }):Play()
		TweenService:Create(textLabel, TweenInfo.new(fadeTime), { TextTransparency = 1 }):Play()
		task.wait(fadeTime)
		part:Destroy()
	end)
end
for _, player in ipairs(Players:GetPlayers()) do
	createImageDisplay(player)
end
Players.PlayerAdded:Connect(function(player)
	player.CharacterAdded:Connect(function()
		createImageDisplay(player)
	end)
end)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18179181663"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(1)
task.delay(1, function()
    animationTrack:Stop(fadeTime)
end)
Wait(0.4)
local c = game.Players.LocalPlayer.Character
local hum = c:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://0"
local track = hum:LoadAnimation(animation)
track:Play(1, 5, 1)
track:AdjustSpeed(0.01)
local hrp = c:WaitForChild("HumanoidRootPart")
local cfr = hrp.CFrame
local rotateRight = 0 -- Y-axis (turn right/left)
local rotateDown = 2  -- X-axis (tilt forward/backward)
local rotateSide = 0  -- Z-axis (side roll)
local angleX = math.rad(-50) * rotateDown
local angleY = math.rad(50) * rotateRight
local angleZ = math.rad(50) * rotateSide
local start = tick()
while tick() - start < 0.3 do
    task.wait()
    hrp.CFrame = cfr * CFrame.Angles(angleX, angleY, angleZ) * CFrame.new(0, -0.6, -0.4)
    hrp.Velocity = Vector3.zero
    hrp.RotVelocity = Vector3.zero
end
track:Stop()
        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- consecutive punches
----------[[ punching barrage ]]---------
local animationId = 10466974800
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)     
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18462892217"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.3
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 1.3
animationTrack:AdjustSpeed(0)
task.delay(1.3, function()
    animationTrack:Stop(fadeTime)
end)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17363256069"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.3
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 1.5
animationTrack:AdjustSpeed(0)
task.delay(1.3, function()
    animationTrack:Stop(fadeTime)
end)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18896229321"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.3
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 1
animationTrack:AdjustSpeed(1.5)
task.delay(1.5, function()
    animationTrack:Stop(fadeTime)
end)
        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- shove
-----------[[ ravage overslam ]]--------------o
local animationId = 10471336737
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
local c = game.Players.LocalPlayer.Character
local hum = c:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://0"
local track = hum:LoadAnimation(animation)
track:Play(1, 5, 1)
track:AdjustSpeed(0.01)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://93546004428904"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.3
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 4.4
animationTrack:AdjustSpeed(1)
task.delay(1, function()
    animationTrack:Stop(fadeTime)
end)
wait(0.1)
local hrp = c:WaitForChild("HumanoidRootPart")
local cfr = hrp.CFrame
local rotateRight = 0 -- Y-axis (turn right/left)
local rotateDown = 1.8  -- X-axis (tilt forward/backward)
local rotateSide = 0  -- Z-axis (side roll)
local angleX = math.rad(-50) * rotateDown
local angleY = math.rad(50) * rotateRight
local angleZ = math.rad(50) * rotateSide
task.spawn(function()
    local start = tick()
    while tick() - start < 0.1 do
        task.wait()
        hrp.CFrame = cfr * CFrame.Angles(angleX, angleY, angleZ) * CFrame.new(0, -0, -0)
        hrp.Velocity = Vector3.zero
        hrp.RotVelocity = Vector3.zero
    end
    track:Stop()
end)
        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- uppercut
--------[[ reversed overhead ]]--------
local animationId = 12510170988
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
local c = game.Players.LocalPlayer.Character
local hum = c:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://0"
local track = hum:LoadAnimation(animation)
track:Play(1, 5, 1)
track:AdjustSpeed(0.01)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://12467789963"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.3
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 2
animationTrack:AdjustSpeed(-1)
task.delay(2, function()
    animationTrack:Stop(fadeTime)
end)
wait(0.5)
local hrp = c:WaitForChild("HumanoidRootPart")
local cfr = hrp.CFrame
local rotateRight = 0 -- Y-axis (turn right/left)
local rotateDown = -2 -- X-axis (tilt forward/backward)
local rotateSide = 0  -- Z-axis (side roll)
local angleX = math.rad(-50) * rotateDown
local angleY = math.rad(50) * rotateRight
local angleZ = math.rad(50) * rotateSide
task.spawn(function()
    local start = tick()
    while tick() - start < 0.01 do
        task.wait()
        hrp.CFrame = cfr * CFrame.Angles(angleX, angleY, angleZ) * CFrame.new(0, -0, -0)
        hrp.Velocity = Vector3.zero
        hrp.RotVelocity = Vector3.zero
    end
    track:Stop()
end)
        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- Ultimate
-- strongest 
-----[ ramping ]-----



local animationId = 12447707844

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create and play the new animation
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)
        
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local imageId = "rbxassetid://98871503201054"
local fadeTime = 0.5
local tweenOffset = Vector3.new(3, 1, 0)

local player = Players.LocalPlayer
local hasShownBillboard = false

local baseTextPos = UDim2.new(0.30, 0, 0.24, 0)

local function setTextPosition(mods)
	local x = baseTextPos.X.Scale
	local y = baseTextPos.Y.Scale

	if mods.right then x += mods.right end
	if mods.left then x -= mods.left end
	if mods.down then y += mods.down end
	if mods.up then y -= mods.up end

	return UDim2.new(x, 0, y, 0)
end

local function createImageDisplay()
	if hasShownBillboard then return end
	hasShownBillboard = true

	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Size = Vector3.new(4, 4, 0.1)
	part.CFrame = hrp.CFrame * CFrame.new(tweenOffset)
	part.Transparency = 1
	part.Parent = workspace

	local surfaceGui = Instance.new("SurfaceGui")
	surfaceGui.Face = Enum.NormalId.Front
	surfaceGui.AlwaysOnTop = true
	surfaceGui.Adornee = part
	surfaceGui.LightInfluence = 0
	surfaceGui.ResetOnSpawn = false
	surfaceGui.Parent = part

	local imageLabel = Instance.new("ImageLabel")
	imageLabel.Size = UDim2.new(1, 0, 1, 0)
	imageLabel.Position = UDim2.new(0, 0, 0, 0)
	imageLabel.BackgroundTransparency = 1
	imageLabel.Image = imageId
	imageLabel.ImageTransparency = 1
	imageLabel.Parent = surfaceGui

	local textLabel = Instance.new("TextLabel")
	textLabel.Size = UDim2.new(0.42, 0, 0.42, 0)
	textLabel.Position = setTextPosition({ right = 0.05 })
	textLabel.BackgroundTransparency = 1
	textLabel.TextScaled = true
	textLabel.Font = Enum.Font.SpecialElite
	textLabel.TextColor3 = Color3.new(0, 0, 0)
	textLabel.TextStrokeTransparency = 1
	textLabel.Text = ".... And the strongest.... ....."
	textLabel.TextTransparency = 1
	textLabel.Parent = imageLabel

	TweenService:Create(imageLabel, TweenInfo.new(fadeTime), { ImageTransparency = 0 }):Play()
	TweenService:Create(textLabel, TweenInfo.new(fadeTime), { TextTransparency = 0 }):Play()

	task.delay(2, function()
		TweenService:Create(imageLabel, TweenInfo.new(fadeTime), { ImageTransparency = 1 }):Play()
		TweenService:Create(textLabel, TweenInfo.new(fadeTime), { TextTransparency = 1 }):Play()
		task.wait(fadeTime)
		part:Destroy()
	end)
end

-- Trigger once when character loads
if player.Character then
	createImageDisplay()
end

player.CharacterAdded:Connect(function()
	hasShownBillboard = false
	createImageDisplay()
end)

----------------------------------------------------------

-- OPPOSITE SIDE VERSION

local fadeTime2 = 0.5
local tweenOffset2 = Vector3.new(-3, 1, 0)
local hasShownBillboard2 = false
local function createImageDisplayOpposite()
	if hasShownBillboard2 then return end
	hasShownBillboard2 = true
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Size = Vector3.new(4, 4, 0.1)
	part.CFrame = hrp.CFrame * CFrame.new(tweenOffset2)
	part.Transparency = 1
	part.Parent = workspace
	local surfaceGui = Instance.new("SurfaceGui")
	surfaceGui.Face = Enum.NormalId.Front
	surfaceGui.AlwaysOnTop = true
	surfaceGui.Adornee = part
	surfaceGui.LightInfluence = 0
	surfaceGui.ResetOnSpawn = false
	surfaceGui.Parent = part
	local imageLabel = Instance.new("ImageLabel")
	imageLabel.Size = UDim2.new(1, 0, 1, 0)
	imageLabel.Position = UDim2.new(0, 0, 0, 0)
	imageLabel.BackgroundTransparency = 1
	imageLabel.Image = imageId
	imageLabel.ImageTransparency = 1
	imageLabel.Parent = surfaceGui
	local textLabel = Instance.new("TextLabel")
	textLabel.Size = UDim2.new(0.42, 0, 0.42, 0)
	textLabel.Position = setTextPosition({ left = -0.05 })
	textLabel.BackgroundTransparency = 1
	textLabel.TextScaled = true
	textLabel.Font = Enum.Font.SpecialElite
	textLabel.TextColor3 = Color3.new(0, 0, 0)
	textLabel.TextStrokeTransparency = 1
	textLabel.Text = "... ramps up."
	textLabel.TextTransparency = 1
	textLabel.Parent = imageLabel
	TweenService:Create(imageLabel, TweenInfo.new(fadeTime2), { ImageTransparency = 0 }):Play()
	TweenService:Create(textLabel, TweenInfo.new(fadeTime2), { TextTransparency = 0 }):Play()
	task.delay(2, function()
		TweenService:Create(imageLabel, TweenInfo.new(fadeTime2), { ImageTransparency = 1 }):Play()
		TweenService:Create(textLabel, TweenInfo.new(fadeTime2), { TextTransparency = 1 }):Play()
		task.wait(fadeTime2)
		part:Destroy()
	end)
end
-- Trigger once when character loads
if player.Character then
	createImageDisplayOpposite()
end
player.CharacterAdded:Connect(function()
	hasShownBillboard2 = false
	createImageDisplayOpposite()
end)
local c = game.Players.LocalPlayer.Character
local hum = c:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://0"
local track = hum:LoadAnimation(animation)
track:Play(1, 5, 1)
track:AdjustSpeed(0.01)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://18435303746"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.3
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(1)

task.delay(2.3, function()
    animationTrack:Stop(fadeTime)
end)
        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- uppercut
local animationId = 10503381238
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)      
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://14900168720"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 1.3
animationTrack:AdjustSpeed(1)
task.delay(1, function()
    animationTrack:Stop(fadeTime)
end)
        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- downslam
local animationId = 10470104242
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)      
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://12467789963"
local animationTrack = humanoid:LoadAnimation(animation)
local fadeTime = 0.3
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0.5
animationTrack:AdjustSpeed(1.3)
task.delay(0.8, function()
    animationTrack:Stop(fadeTime)
end)
        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- auto wall combo
-------------[[ wall combo ]]---------------
-- finally bruh took me so much frickin time on ts
local animationId = 10503381238
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local isOnCooldown = false
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        if isOnCooldown then return end
        isOnCooldown = true
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://14900168720"
        local animationTrack2 = humanoid:LoadAnimation(animation)
        local fadeTime = 0.5
        animationTrack2:Play(fadeTime)
        animationTrack2.TimePosition = 1.3
        animationTrack2:AdjustSpeed(1)
        task.delay(1, function()
            animationTrack2:Stop(fadeTime)
        end)
        local c = character
        local hum = c:WaitForChild("Humanoid")
        local track = hum:LoadAnimation(AnimAnim)
        track:Play(1, 5, 1)
        track:AdjustSpeed(0.01)
        local hrp = c:WaitForChild("HumanoidRootPart")
        local cfr = hrp.CFrame
        local rotateRight = 0
        local rotateDown = 1.8
        local rotateSide = 0
        local angleX = math.rad(-50) * rotateDown
        local angleY = math.rad(50) * rotateRight
        local angleZ = math.rad(50) * rotateSide
        task.spawn(function()
            local start = tick()
            while tick() - start < 0.5 do
                task.wait()
                hrp.CFrame = cfr * CFrame.Angles(angleX, angleY, angleZ) * CFrame.new(0, 0, 0)
                hrp.Velocity = Vector3.zero
                hrp.RotVelocity = Vector3.zero
            end
            track:Stop()
        end)
        task.wait(0.05)
        local args1 = {
            { Goal = "Wall Combo" }
        }
        task.wait(0.4) character:WaitForChild("Communicate"):FireServer(unpack(args1))
        local args2 = {
            {
                Dash = Enum.KeyCode.W,
                Key = Enum.KeyCode.Q,
                Goal = "KeyPress"
            }
        }      character:WaitForChild("Communicate"):FireServer(unpack(args2))
        coroutine.wrap(function()
            wait(0.9)
            Anim:Stop()
        end)()
        task.delay(9, function()
            isOnCooldown = false
        end)
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- wall combo
-- animation
-- [[ heh ]] --
local animationId = 15955393872
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://0"
        local Anim = humanoid:LoadAnimation(AnimAnim)      
        local startTime = 0.6
        Anim:Play()
        Anim:AdjustSpeed(0)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(0.3)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://17420452843"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 1.3
animationTrack:AdjustSpeed(1)

task.delay(1, function()
    animationTrack:Stop(fadeTime)
end)
wait(1)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://140164642047188"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 6
animationTrack:AdjustSpeed(1)

task.delay(5, function()
    animationTrack:Stop(fadeTime)
end)

        local function stopAnimationAfterDelay()
            wait(0.9)
            Anim:Stop()
        end
        coroutine.wrap(stopAnimationAfterDelay)()
    end
end
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
-- ultimate color 1
--------[ text color ]---------
local player = game:GetService("Players").LocalPlayer
local magicHealth = player.PlayerGui:WaitForChild("Bar"):WaitForChild("MagicHealth")
magicHealth.BackgroundColor3 = Color3.new(0, 0, 0)
if magicHealth:FindFirstChildWhichIsA("TextLabel") then
    magicHealth:FindFirstChildWhichIsA("TextLabel").TextColor3 = Color3.new(0, 90, 255)
end